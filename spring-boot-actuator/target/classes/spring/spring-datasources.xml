<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <!-- 当前库数据库连接池 比c3p0更高效-->
    <bean id="dataSource" name="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <!-- 指定连接数据库的驱动-->
        <property name="driverClassName" value="${credit.decision.engine.db.driver}"/>
        <!-- 指定连接数据库的URL-->
        <property name="jdbcUrl" value="${credit.decision.engine.db.write.url}"/>
        <!-- 指定连接数据库的用户名-->
        <property name="username" value="${credit.decision.engine.db.write.username}"/>
        <!-- 指定连接数据库的密码-->
        <property name="password" value="${credit.decision.engine.db.write.password}"/>
        <!-- 连接只读数据库时配置为true， 保证安全 -->
        <property name="readOnly" value="false"/>
        <!-- 指定连接池中保留的最大连接数. Default:15-->
        <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
        <property name="maximumPoolSize" value="${credit.decision.engine.db.maxPoolSize}"/>
        <!-- 指定连接池中保留的最小连接数-->
        <property name="minimumIdle" value="${credit.decision.engine.db.minPoolSize}"/>
        <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
        <property name="connectionTimeout" value="${credit.decision.engine.db.connectionTimeout}"/>
        <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
        <property name="idleTimeout" value="${credit.decision.engine.db.idleTimeout}"/>
        <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL
            wait_timeout参数（show variables like '%timeout%';） -->
        <property name="maxLifetime" value="${credit.decision.engine.db.maxLifetime}"/>
        <!--是否自动提交-->
        <property name="autoCommit" value="true"/>
        <!--连接测试语句-->
        <property name="connectionTestQuery" value="SELECT 1 FROM DUAL"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事务模板 -->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>

    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/spring/mybatis.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!-- 自动扫描和注册Mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xinyan.boot.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 声明使用注解式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>